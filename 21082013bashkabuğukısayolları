
$ echo "$SHELL" '$SHELL' "$$" '$$'
/bin/bash $SHELL 3109 $$

$ bash -c "echo test islem $$"
test islem 3109

$echo "-$HOME/abc-"
-/home/simge/abc-

$echo "-$HOME_abc-"
--

LİNUXDA YARDIM ALMAK
1-)man command_name
2-)info command_name
3-)command_name --help
4-)whatis command_name
5-)apropos search string

whatis<help<man<info
manual sayfaları o komut hakkında orta seviyedeki bilgileri verir parametreler,
komutun tanımı, yazarı, iletişim bilgileri
info sayfaları komut hakkında daha detaylı bilgi verir.
help sadece parametreleri hakkında bilgi verir.
whatis komutu ile komutun tanımı ve ne işe yardığını görebiliriz.
apropos ise herhangi bir komutla ilgili arama yapabiliriz. 

Uygulama
Bash kabuğunda smg uzantılı bir dosya olduğunda rengi turkuaz olsun.
text.smg uzatılı bir dosyanın rengi turkuaz olsun.
$nano .bashrc
PS1="\[\033[0;32;40m\u@\h:\w\$ \]" ???????? color değişkenini bulamamız lazım

System Information
$uname  	-->çekirdeğin adını verir.
Linux
$uname -s	-->çekirdeğin adını verir.
Linux
$uname -v	-->kernelın versiyonunu verir.
#28-Ubuntu SMP Tue Oct 9 19:32:08 UTC 2012
$uname -n	-->hostname i gösterir.
smg
$uname -r	-->
3.5.0-17-generic
$uname -m	-->cpu hardware i gösterir.
i686
$uname -o	-->işletim sisteminin adını verir.
GNU/Linux
$uname -a	-->tüm bilgileri ekrana yazdırır.
Linux smg 3.5.0-17-generic #28-Ubuntu SMP Tue Oct 9 19:32:08 UTC 2012 i686 athlon i686 GNU/Linux


History

$history	--> kullandığımız komutların hepsini ekrana yazdırır.
$history N 	--> son N komutu ekrana yazdırır.
$history -d N 	--> son N komutu history den siler
$!! 		--> son komutu çalıştırır.
$!N 		--> N numaralı çalıştırılan komutu çalıştırır.

$history | less
$history -d 10
$history > history_deneme

$!-N		-->sondan N. satırda hangi komutu çalıştırdıysak çalışıyor.
$!string	-->$un son kullanılan un ile başlayan komutu ve çıktısını verir.


BASH KABUĞU KISAYOLLARI  

ctrl+alt+f1/f2/f3/f4/f5/f6          Sanal terminallerdir.
bu komutla sistemin terminalleri arasında geçiş yapabiliriz.

$ echo 'Merhaba Dunya'

Ctrl+A => imleç en başa geçer.
Ctrl+E => imleç en sona geçer.
Ctrl+T => Karakterin yerini değiştirir.(İmleçten önceki karakter)
Ctrl+h => Backspace
Ctrl+L => Ekranı temizler
Ctrl+R => Arama yapıyor
Ctrl+V => Back to terminal
Ctrl+C => Prosesi öldürür 
Ctrl+D => Terminali kapatır
Ctrl+P => Geçmiş komutlara gider.
Ctrl+Z => Arka plana atar (Ön plana atmak için $fg)

Soru:
$merhaba echo duyna (echo 'Merhaba Dunya' olması gerekir. merhaba ile echo kelimelerini değiştirmemiz gerektiriyor duyna'daki y ve n ise karakter değiştirme gerektiriyor) komutunun çalıştırabilmemiz için klavye kısayollarını kullanınız.
alt+t ile kelimelerin yerini değiştiririz.(esc+t de olabilir.) ctrl+t ile de y ve n karakterlerinin yerlerini değiştiririz.


$Alt+L => Karakterleri küçük karakterlere çevirir
$Alt+U => Karakterleri büyük karakterlere çevirir

Uygulama
1- tmp dizini altında test adlı klasör bulunmaktadır. Test adlı klasör içindeki 'log' uzantılı dosyaları ev dizininize kopyalayın.
$cp -r /tmp/test/*.log /home/smg

2- Secson klasörü altına 10 tane 'episode' dosyasını numarandırarak oluşturun. Bu episode dosyalarının 5 ile 8 arasındaki dosyaları listeleyin.
$mkdir secson
$cd secson
$touch episode{0..9}
$ls episode[5-8]

Not:

CD => Change Directory

$cd ~;pwd	=>home dizinine gider.
/home/smg
$cd -;pwd 	=> bir önceki dizine gider.  

3- Sisteme her girişinizde öntanımlı dizininiz /home/username/bin adlı dizin olsun.

?????????


SHELL I/O streams
		
stdin               Streams(komutun çıktısı)
stdout ====>>>>     pipe(diğerinin çıktısını öbürüne girdi olarak verir.)
stderr              redirect(yönlendirme yapıyor.)

->Pipe
$echo -e "elma\n armut\n muz\n kiraz\n" | sort  (sort sıralama komutu- |'dan itibaren olmasaydı direk yazacaktı.echo komutunun çıktısını sort komutunun girdisi olarak alır.)

$dmesg | less (kernel mesajlarını okuyabiliriz.)

->redirect

$echo -e "elma\n armut\n muz\n kiraz\n" > meyve

$cat > sebze (dosya oluşturma yöntemlerinden biridir.)
 domates patlıcan (ctrl+c ile ile çıkıyoruz.)

örnek:
$echo -e "1\n 2\n 3\n 4\n 5\n" > dosya

$cat dosya diyerek yazdırdığımız sonucu tersten yazdırmak için $tac dosya komutunu vermeliyiz.

$ cat dosya
1
 2
 3
 4
 5

$tac dosya

 5
 4
 3
 2
1

örnek:
$man ls>text1;man rm>text2;man cp>text3
$cat text1 
$split -b 2 text1	#2byte (byte byte ayırmak için)
$split -b 20 text2
$split -l 20 text2	#-l parametresiyle satır satır ayırır.
 eski haline geri döndürmek için 
$rm -r x*


